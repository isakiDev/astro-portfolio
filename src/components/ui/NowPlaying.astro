---
import Offline from "@icons/Offline.astro";
import { getNowPlaying } from "../../services/now-playing.service";
import { nowPlayingAdapter } from "../../utils/now-playing.adapter";

const nowPlaying = await getNowPlaying({
  clientId: import.meta.env.PUBLIC_SPOTIFY_CLIENT_ID,
  clientSecret: import.meta.env.SECRET_SPOTIFY_CLIENT_SECRET,
  refreshToken: import.meta.env.SECRET_SPOTIFY_REFRESH_TOKEN,
});

const { albumImageUrl, title, artist, playingState, isPlaying } =
  nowPlayingAdapter(nowPlaying);

const playbackDisplayByState = {
  playing: {
    albumImageUrl,
    title,
    artist,
  },
  offline: {
    albumImageUrl: "images/albumCover.png",
    title: "User is",
    artist: "currently offline",
  },
};

const {
  albumImageUrl: imageUrl,
  title: titleText,
  artist: artistText,
} = playbackDisplayByState[playingState];
---

<article
  class="border border-green-500/10 bg-secondary rounded-2xl w-fit py-2 px-3 flex items-center gap-4 animate-pulse-fade-in animate-duration-500"
>
  <img
    class="border border-white/10 rounded-2xl opacity-40"
    width="55"
    src={imageUrl}
    alt="Album Image"
  />

  <div>
    <h2 title={titleText} class="text-sm truncate max-w-32 text-green-600">
      {titleText}
    </h2>
    <p title={artistText} class="text-xs truncate max-w-32">
      {artistText}
    </p>
  </div>

  {
    isPlaying ? (
      <img
        class="ml-auto opacity-80"
        width="40"
        src="images/soundbar.gif"
        alt="Soundbar"
      />
    ) : (
      <Offline />
    )
  }
</article>
